version: '3.8'

services:
  # LytePHP Application
  app:
    build:
      context: .
      target: development
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www/html
      - ./logs:/var/www/html/logs
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=lytephp
      - DB_USERNAME=lytephp
      - DB_PASSWORD=lytephp123
    depends_on:
      - mysql
      - redis
    networks:
      - lytephp-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=lytephp
      - MYSQL_USER=lytephp
      - MYSQL_PASSWORD=lytephp123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - lytephp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lytephp-network

  # phpMyAdmin (optional)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - PMA_USER=lytephp
      - PMA_PASSWORD=lytephp123
    depends_on:
      - mysql
    networks:
      - lytephp-network

  # Redis Commander (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - lytephp-network

volumes:
  mysql_data:
  redis_data:

networks:
  lytephp-network:
    driver: bridge 